[project]
name = "chemflow"
version = "0.1.0"
description = "Your description"
requires-python = ">=3.11.0"
dependencies = [
    "hydra-core>=1.3.2",
    "lightning>=2.5.5",
    "omegaconf>=2.3.0",
    "pandas>=2.3.3",
    "scipy>=1.16.3",
    "torch>=2.9.0",
    "torchvision>=0.24.0",
    "wandb>=0.22.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/chemflow"]

[tool.ruff]
# Allow lines to be as long as 88.
line-length = 88

[tool.ruff.format]
docstring-code-format = true

# borrowed lint rules from chgnet
[tool.ruff.lint]
# consider selecting "ISC", for implicit string concat
# consider selecting "T201", for print in production code
select = [
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "D",    # pydocstyle
    "E",    # pycodestyle error
    "E501", # line too long
    "EXE",  # flake8-executable
    "F",    # pyflakes
    "FLY",  # flynt
    "I",    # isort
    "ICN",  # flake8-import-conventions
    "PD",   # pandas-vet
    "PERF", # perflint
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PT",   # flake8-pytest-style
    "PYI",  # flakes8-pyi
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "RUF",  # Ruff-specific rules
    "SIM",  # flake8-simplify
    "SLOT", # flakes8-slot
    "TCH",  # flake8-type-checking
    "TID",  # tidy imports
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
    "W",    # pycodestyle warning
    "W505", # line too long
    "YTT",  # flake8-2020
]
# also consider ignoring "C901", for high mccabe function complexity
# also consider ignoring "ERA001", for found commented out code
ignore = [
    "EXE002",   # shebang is not a python interpreter
    "RUF012",  # missing classvar type
    "RUF013",  # Optional prohibited by PEP484
    "B006",    # Do not use mutable data structures for argument defaults
    "ANN003",  # missing type annotations for kwargs
    "B019",    # Use of functools.lru_cache on methods can lead to memory leaks
    "C408",    # unnecessary-collection-call
    "COM812",  # trailing comma missing
    "D205",    # 1 blank line required between summary line and description
    "D415",    # first line of docstring must end with punctuation
    "DTZ005",  # use of datetime.now() without timezone
    "E731",    # do not assign a lambda expression, use a def
    "EM",      # flake8-errmsg
    "FBT001",  # Boolean positional argument in function
    "FBT002",  # Boolean keyword argument in function
    "NPY002",  # TODO replace legacy np.random.seed
    "PLR",     # pylint refactor
    "PLW2901", # Outer for loop variable overwritten by inner assignment target
    "PT006",   # pytest-parametrize-names-wrong-type
    "PT011",   # pytest-raises-too-broad
    "PT013",   # pytest-incorrect-pytest-import
    "PT019",   # pytest-fixture-param-without-value
    "PTH",     # prefer Path to os.path
    "S301",    # pickle can be unsafe
    "S310",    # url open functions can be unsafe
    "TRY003",  # long exception messages not defined in the exception class itself
    "UP015",   # unnecessary "r" in open call
    "D107",    # docstring for __init__ 
    "D212",    # remove whitespace after opening quotes
    "D202",    # no blank lines after docstring
    "D301", 
    "D100",
    "D103",
]
pydocstyle.convention = "google"

[env]
PROJECT_ROOT = "." 
